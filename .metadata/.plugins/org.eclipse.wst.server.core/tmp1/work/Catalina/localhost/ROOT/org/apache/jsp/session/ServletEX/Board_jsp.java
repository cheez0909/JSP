/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.81
 * Generated at: 2023-11-17 00:42:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.session.ServletEX;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.momo.dto.PageDTO;
import com.momo.dto.Criteria;
import com.momo.dto.BoardDTO;
import java.util.List;
import com.momo.dto.memberDTO;

public final class Board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.momo.dto.PageDTO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.momo.dto.BoardDTO");
    _jspx_imports_classes.add("com.momo.dto.Criteria");
    _jspx_imports_classes.add("com.momo.dto.memberDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html style=\"user-select: auto;\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시판</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" style=\"user-select: auto;\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../5/sketchy/bootstrap.css\" style=\"user-select: auto;\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../_vendor/bootstrap-icons/font/bootstrap-icons.min.css\" style=\"user-select: auto;\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../_vendor/prismjs/themes/prism-okaidia.css\" style=\"user-select: auto;\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../_assets/css/custom.min.css\" style=\"user-select: auto;\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9\" crossorigin=\"anonymous\">\r\n");
      out.write("<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-KGDJBEFF3W\" style=\"user-select: auto;\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/sketchy/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("    \r\n");
      out.write("   .well{\r\n");
      out.write("   \r\n");
      out.write("   margin-left:100px;\r\n");
      out.write("   margin-right:100px;\r\n");
      out.write("   }\r\n");
      out.write(" \r\n");
      out.write(" a{\r\n");
      out.write(" text-decoration-line: none;\r\n");
      out.write(" }\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("    <script style=\"user-select: auto;\">\r\n");
      out.write("      window.dataLayer = window.dataLayer || [];\r\n");
      out.write("      function gtag(){dataLayer.push(arguments);}\r\n");
      out.write("      gtag('js', new Date());\r\n");
      out.write("\r\n");
      out.write("      gtag('config', 'G-KGDJBEFF3W');\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("window.onload = function() {\r\n");
      out.write("	\r\n");
      out.write("	let logoutBtn = document.querySelector(\"#logout_button\");\r\n");
      out.write("	\r\n");
      out.write("	if(logoutBtn!=null){\r\n");
      out.write("		logoutBtn.onclick = function(){\r\n");
      out.write("			alert(\"로그아웃합니다.\");\r\n");
      out.write("			LoginForm.action = \"/LogoutController\";\r\n");
      out.write("			LoginForm.submit();\r\n");
      out.write("		};\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	let loginBtn = document.querySelector(\"#login_button\");\r\n");
      out.write("\r\n");
      out.write("	if(loginBtn!=null){\r\n");
      out.write("	loginBtn.addEventListener('click', function(){\r\n");
      out.write("		alert(\"로그인합니다\")\r\n");
      out.write("		// 경로 확인,,, 뒤돌아왔을때 안될수도 있음\r\n");
      out.write("		//LoginForm.action = \"Login.jsp\";\r\n");
      out.write("		LoginForm.action=\"/session/ServletEX/Login.jsp\";\r\n");
      out.write("		LoginForm.submit();\r\n");
      out.write("	});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 취소버튼\r\n");
      out.write("	let deletebtn = document.querySelector(\"#deletebtn\");\r\n");
      out.write("	\r\n");
      out.write("	if(deletebtn!=null){\r\n");
      out.write("	deletebtn.addEventListener('click', function(){\r\n");
      out.write("		deleteFnc();\r\n");
      out.write("	});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function deleteFnc(){\r\n");
      out.write("		alert('삭제버튼이 클릭되었습니다.');\r\n");
      out.write("		if(confirm(\"정말로 삭제하시겠습니까?\")){\r\n");
      out.write("			deletebtn.action=\"/delete\";\r\n");
      out.write("			// location.href=\"/delete\";\r\n");
      out.write("			deletebtn.submit();\r\n");
      out.write("		} else{\r\n");
      out.write("			alert('취소 클릭');\r\n");
      out.write("		};\r\n");
      out.write("	}\r\n");
      out.write("	*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class style=\"user-select: auto;\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Button trigger modal -->\r\n");
      out.write("<button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n");
      out.write("  Launch demo modal\r\n");
      out.write("</button>\r\n");
      out.write("\r\n");
      out.write("<!-- Modal -->\r\n");
      out.write("<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("  <div class=\"modal-dialog\" role=\"document\" style=\"user-select: auto;\">\r\n");
      out.write("    <div class=\"modal-content\" style=\"user-select: auto;\">\r\n");
      out.write("      <div class=\"modal-header\" style=\"user-select: auto;\">\r\n");
      out.write("        <h5 class=\"modal-title\" style=\"user-select: auto;\" id=\"exampleModalLabel\">Modal title</h5>\r\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" style=\"user-select: auto;\">\r\n");
      out.write("          <span aria-hidden=\"true\" style=\"user-select: auto;\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"modal-body\" style=\"user-select: auto;\">\r\n");
      out.write("        <p style=\"user-select: auto;\">Modal body text goes here.</p>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"modal-footer\" style=\"user-select: auto;\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-primary\" style=\"user-select: auto;\">Save changes</button>\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" style=\"user-select: auto;\">Close</button>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 로그인 / 로그아웃 링크 보여주기\r\n");
      out.write("	세션에 user_id가 null이 아니라면 로그아웃 버튼\r\n");
      out.write("	null이면 로그인\r\n");
      out.write(" -->\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("<form name=\"LoginForm\">\r\n");
      out.write("<div class=\"navbar\" style=\"user-select: auto;\">\r\n");
      out.write("    <div class=\"navbar-inner\" style=\"user-select: auto;\">\r\n");
      out.write("      <div class=\"container\" style=\"width: auto; user-select: auto;\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"/session/ServletEX/Login.jsp\" style=\"user-select: auto;\">Board</a>\r\n");
      out.write("         ");

	memberDTO dto = (memberDTO) session.getAttribute("dto");
	if(dto!=null){ 
      out.write("\r\n");
      out.write("		");
      out.print(dto.getName() );
      out.write(" &nbsp; welcome! &nbsp; &nbsp;\r\n");
      out.write("		<button type=\"button\" class=\"btn btn-secondary my-2 my-sm-0\" id=\"logout_button\" style=\"user-select: auto;\">logout</button>\r\n");
      out.write("	");
} else {
      out.write("\r\n");
      out.write("		<button type=\"button\" class=\"btn btn-dark\" id=\"login_button\" style=\"user-select: auto;\">login</button>\r\n");
      out.write("	");
} 
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("    </div><!-- /navbar-inner -->\r\n");
      out.write("  </div>\r\n");
      out.write("</form>	\r\n");
      out.write("\r\n");
      out.write("<br/>\r\n");
      out.write("<br/>\r\n");
      out.write("\r\n");
      out.write("<!-- 페이지 넘버 변수 -->\r\n");
      out.write("	");

		PageDTO pages = null;
	if(request.getAttribute("page")!=null && !"".equals(request.getAttribute("page"))){
		pages = (PageDTO) request.getAttribute("page");
	} else{
		pages = new PageDTO(0, new Criteria());
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form>\r\n");
      out.write("<div class=\"well\">\r\n");
      out.write("	<div class=\"header\">\r\n");
      out.write("	<H2 style=\"float: left;\">Board</H2>\r\n");
      out.write("		");
 if(dto!=null){ 
      out.write("\r\n");
      out.write("	<a href=\"/session/ServletEX/BoardWrite.jsp\" style=\"float: right;\"><button type=\"button\" class=\"btn btn-info btn-xs\" id=\"writebtn\"><span class=\"glyphicon glyphicon-edit\"></span>New</button></a>\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("    <table class=\"table\">\r\n");
      out.write("      <thead>\r\n");
      out.write("        <tr>\r\n");
      out.write("          <th>No</th>\r\n");
      out.write("            <th>Title</th>\r\n");
      out.write("            <th>Writer</th>\r\n");
      out.write("            <th>Date Created</th>\r\n");
      out.write("			<th>views</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("      </thead>\r\n");
      out.write("       ");

		if(request.getAttribute("boarddto")!=null){
		List<BoardDTO> dtos = ( List<BoardDTO> ) request.getAttribute("boarddto");
		for(BoardDTO num : dtos){
      out.write("\r\n");
      out.write("    	<tr>\r\n");
      out.write("                <td>");
      out.print(num.getNum() );
      out.write("</td>\r\n");
      out.write("                <td><a href=\"/session/ServletEX/detail?num=");
      out.print(num.getNum());
      out.write("&pageNo=");
      out.print(pages.getCriteria().getPageNo());
      out.write('"');
      out.write('>');
      out.print(num.getTitle() );
      out.write("</a></td>\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("                <td>");
      out.print(num.getId() );
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(num.getPostdate() );
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(num.getVisitcount() );
      out.write("</td>\r\n");
      out.write("                \r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("              \r\n");
      out.write("            </tr>\r\n");
      out.write("           ");

        }
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("	</table>\r\n");
      out.write("	<!-- \r\n");
      out.write("		페이지 네비게이션 작성\r\n");
      out.write("		- 페이지 번호\r\n");
      out.write("		- 페이지블럭당 페이지 수\r\n");
      out.write("		- 페이지블럭의 시작번호 ~ 페이지블럭의 끝번호\r\n");
      out.write("		\r\n");
      out.write("		총 게시물의 수 totalCnt\r\n");
      out.write("		- 페이지당 게시물의 수 amount\r\n");
      out.write("		진짜 블럭의 끝번호\r\n");
      out.write("	 -->\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<div id = \"pagination\">\r\n");
      out.write("  <ul class=\"pagination justify-content-end\" style=\"user-select: auto;\">\r\n");
      out.write("    <li class=\"page-item ");
      out.print( pages.isPrevious() ? "" : "disabled" );
      out.write("\" style=\"user-select: auto;\">\r\n");
      out.write("      <a class=\"page-link\" href=\"/boardList?pageNo=");
      out.print(pages.getCriteria().getPageNo() - 1);
      out.write("\" style=\"user-select: auto;\">&laquo;</a>\r\n");
      out.write("    </li>\r\n");
      out.write("    \r\n");
      out.write("    ");

    	for(int i = pages.getPage_startNo(); i <= pages.getPage_endNo(); i++){
    
      out.write("\r\n");
      out.write("    <li class=\"page-item ");
      out.print( pages.getCriteria().getPageNo() == i ? "active" : "" );
      out.write("\"\" style=\"user-select: auto;\">\r\n");
      out.write("      <a class=\"page-link\" href=\"/boardList?pageNo=");
      out.print(i);
      out.write("\" style=\"user-select: auto;\">");
      out.print(i);
      out.write("</a>\r\n");
      out.write("    </li>\r\n");
      out.write("     ");
} 
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <li class=\"page-item ");
      out.print( pages.isNext() ? "" : "disabled" );
      out.write("\">\r\n");
      out.write("      <a class=\"page-link \" href=\"/boardList?pageNo=");
      out.print(pages.getCriteria().getPageNo() + 1);
      out.write("\" style=\"user-select: auto;\">&raquo;</a>\r\n");
      out.write("    </li>\r\n");
      out.write("  </ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
