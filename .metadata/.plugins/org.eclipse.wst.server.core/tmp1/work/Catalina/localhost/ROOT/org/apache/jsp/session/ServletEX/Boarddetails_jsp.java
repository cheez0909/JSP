/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.81
 * Generated at: 2023-11-20 06:55:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.session.ServletEX;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.momo.dao.BoardDAO;
import com.momo.dto.BoardDTO;
import java.util.List;
import com.momo.dto.memberDTO;

public final class Boarddetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.momo.dao.BoardDAO");
    _jspx_imports_classes.add("com.momo.dto.BoardDTO");
    _jspx_imports_classes.add("com.momo.dto.memberDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <!-- This file has been downloaded from Bootsnipp.com. Enjoy! -->\r\n");
      out.write("    <title>UI card design css - Bootsnipp.com</title>\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link href=\"http://maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body {\r\n");
      out.write("    margin:0;\r\n");
      out.write("    padding:0;\r\n");
      out.write("    font-family:sans-serif;\r\n");
      out.write("    background:#fbfbfb;\r\n");
      out.write("}\r\n");
      out.write(".card {\r\n");
      out.write("    position:absolute;\r\n");
      out.write("    top:50%;\r\n");
      out.write("    left:50%;\r\n");
      out.write("    transform:translate(-50%,-50%);\r\n");
      out.write("    width:300px;\r\n");
      out.write("    min-height:500px;\r\n");
      out.write("    background:#fff;\r\n");
      out.write("    box-shadow:0 20px 50px rgba(0,0,0,.1);\r\n");
      out.write("    border-radius:10px;\r\n");
      out.write("    transition:0.5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card .btn {\r\n");
      out.write("	display:inline-flex;\r\n");
      out.write("}\r\n");
      out.write(".card:hover {\r\n");
      out.write("    box-shadow:0 30px 70px rgba(0,0,0,.2);\r\n");
      out.write("}\r\n");
      out.write(".card .box {\r\n");
      out.write("    position:absolute;\r\n");
      out.write("    top:50%;\r\n");
      out.write("    left:0;\r\n");
      out.write("    transform:translateY(-50%);\r\n");
      out.write("    text-align:center;\r\n");
      out.write("    padding:20px;\r\n");
      out.write("    box-sizing:border-box;\r\n");
      out.write("    width:100%;\r\n");
      out.write("}\r\n");
      out.write(".card .box .img {\r\n");
      out.write("    width:120px;\r\n");
      out.write("    height:120px;\r\n");
      out.write("    margin:0 auto;\r\n");
      out.write("    border-radius:50%;\r\n");
      out.write("    overflow:hidden;\r\n");
      out.write("}\r\n");
      out.write(".card .box .img img {\r\n");
      out.write("    width:100%;\r\n");
      out.write("    height:100%;\r\n");
      out.write("}\r\n");
      out.write(".card .box h2 {\r\n");
      out.write("    font-size:20px;\r\n");
      out.write("    color:#262626;\r\n");
      out.write("    margin:20px auto;\r\n");
      out.write("}\r\n");
      out.write(".card .box h2 span {\r\n");
      out.write("    font-size:14px;\r\n");
      out.write("    background:#e91e63;\r\n");
      out.write("    color:#fff;\r\n");
      out.write("    display:inline-block;\r\n");
      out.write("    padding:4px 10px;\r\n");
      out.write("    border-radius:15px;\r\n");
      out.write("}\r\n");
      out.write(".card .box p {\r\n");
      out.write("    color:#262626;\r\n");
      out.write("}\r\n");
      out.write(".card .box span {\r\n");
      out.write("    display:inline-flex;\r\n");
      out.write("}\r\n");
      out.write(".card .box ul {\r\n");
      out.write("    margin:0;\r\n");
      out.write("    padding:0;\r\n");
      out.write("}\r\n");
      out.write(".card .box ul li {\r\n");
      out.write("    list-style:none;\r\n");
      out.write("    float:left;\r\n");
      out.write("}\r\n");
      out.write(".card .box ul li a {\r\n");
      out.write("    display:block;\r\n");
      out.write("    color:#aaa;\r\n");
      out.write("    margin:0 10px;\r\n");
      out.write("    font-size:20px;\r\n");
      out.write("    transition:0.5s;\r\n");
      out.write("    text-align:center;\r\n");
      out.write("}\r\n");
      out.write(".card .box ul li:hover a {\r\n");
      out.write("    color:#e91e63;\r\n");
      out.write("    transform:rotateY(360deg);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card .btns {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("    display:inline-flex;\r\n");
      out.write("    bottom: 8px;\r\n");
      out.write("    right : 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card .btns> #edit, #delete{\r\n");
      out.write("	margin-right : 5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("window.onload = function(){\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	listBtn.onclick = function(){\r\n");
      out.write("		//location.href='/boardList';\r\n");
      out.write("		history.back();\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	let deletebtn = document.querySelector('#delete');\r\n");
      out.write("	\r\n");
      out.write("	if(deletebtn!=null){\r\n");
      out.write("		deletebtn.addEventListener('click', ()=>{\r\n");
      out.write("			// jsp를 단독으로 실행할 경우, 경로문제가 발생하지 않음(같은 경로에 있기 때문에)\r\n");
      out.write("			// 하지만 서블릿을 통해 들어오는 경우 경로문제가 발생할수 있어서\r\n");
      out.write("			// 루트경로부터 풀 경로를 적어주는 것이 오류가 발생하지 않음\r\n");
      out.write("\r\n");
      out.write("			/* location.href='/session/ServletEX/deleteProcess.jsp?num= */ ");
      out.write(" //';\r\n");
      out.write("			deleteFnc();\r\n");
      out.write("		});\r\n");
      out.write("		}\r\n");
      out.write("	// let edit = document.querySelector('#edit');\r\n");
      out.write("	\r\n");
      out.write("	//edit.onclick = function(){\r\n");
      out.write("	//	location.href='/boardList';\r\n");
      out.write("	//};\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	//if(edit!=null){\r\n");
      out.write("	//	edit.addEventListener('click', ()=>{\r\n");
      out.write("			// jsp를 단독으로 실행할 경우, 경로문제가 발생하지 않음(같은 경로에 있기 때문에)\r\n");
      out.write("			// 하지만 서블릿을 통해 들어오는 경우 경로문제가 발생할수 있어서\r\n");
      out.write("			// 루트경로부터 풀 경로를 적어주는 것이 오류가 발생하지 않음\r\n");
      out.write("	//		location.href='/session/ServletEX/deleteProcess.jsp';\r\n");
      out.write("	//	});\r\n");
      out.write("	//	};\r\n");
      out.write("		\r\n");
      out.write("		function deleteFnc(){\r\n");
      out.write("			if(confirm(\"정말로 삭제하시겠습니까?\")){\r\n");
      out.write("				// deletebtn.action=\"/delete\";\r\n");
      out.write("				location.href='/deleteprocess?num=");
      out.print(request.getParameter("num"));
      out.write("&pageNo=");
      out.print(request.getParameter("pageNo"));
      out.write("';\r\n");
      out.write("				deletebtn.submit();\r\n");
      out.write("			} else{\r\n");
      out.write("				alert('취소 클릭');\r\n");
      out.write("			};\r\n");
      out.write("		};\r\n");
      out.write("		\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"card\">\r\n");
      out.write("		<button type=\"button\" id=\"listBtn\" class=\"btn btn-dark\">리스트로 이동</button>\r\n");
      out.write("	<div class=\"btns\">\r\n");
      out.write("		<button type=\"button\" id=\"delete\" class=\"btn btn-danger btn-xs\">Del</button>\r\n");
      out.write("    	<button type=\"button\" id=\"edit\" class=\"btn btn-info btn-xs\">Edit</button>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"box\">\r\n");
      out.write("        <div class=\"img\">\r\n");
      out.write("            <img src=\"https://item.kakaocdn.net/do/b563e153db82fde06e1423472ccf192c960f4ab09fe6e38bae8c63030c9b37f9\">\r\n");
      out.write("        </div>\r\n");

	if(request.getAttribute("boarddto")!=null){
		BoardDTO dtos = (BoardDTO) request.getAttribute("boarddto");
		
      out.write("\r\n");
      out.write("    			<h2>");
      out.print(dtos.getTitle() );
      out.write("<br><span>");
      out.print(dtos.getPostdate() );
      out.write("</span></h2>\r\n");
      out.write("    			<p> ");
      out.print(dtos.getContent() );
      out.write("</p>\r\n");
      out.write("				");
 } 
				else {
					out.print("(┬┬﹏┬┬)");
				}		

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<span>\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fa fa-twitter\" aria-hidden=\"true\"></i></a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fa fa-google-plus\" aria-hidden=\"true\"></i></a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fa fa-linkedin\" aria-hidden=\"true\"></i></a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fa fa-instagram\" aria-hidden=\"true\"></i></a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </span>\r\n");
      out.write("		\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
