package com.momo;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class DBConnectionEx {

	public static void main(String[] args) {
		String url = "jdbc:oracle:thin:@localhost:1521:orcl";
		String id = "dani";
		String pw = "dani";
		
		Connection drive = null;
		Statement stat = null;
		ResultSet result = null;
		
		try {
			drive = DriverManager.getConnection(url, id, pw);
			stat = drive.createStatement();
			String sql = "select D.DEPT_TITLE, E.EMP_ID, J.JOB_NAME, E.EMP_NAME\r\n"
					+ "FROM EMPLOYEE E INNER JOIN DEPARTMENT D ON (E.DEPT_CODE=D.DEPT_ID)\r\n"
					+ "INNER JOIN JOB J ON (E.JOB_CODE=J.JOB_CODE)";
			
			result = stat.executeQuery(sql);
			
			List<String> exeu = new ArrayList<>();
			// job 객체 생성
			//  jobcode, jobname
			// 셋터 겟터 생성 후 삽입
			while(result.next()) {
				for(int i=1; i<result.getRow(); i++) {
				String value = result.getString(i);
				exeu.add(value);
				}
			}
			
			for(String exeus : exeu) {
				System.out.println(exeus);
			}
		} catch (ClassNotFoundException e) {
		
			System.out.println("드라이버 로딩실패 - 라이브러리가 등록 되었는 지 확인해주세요.");
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			
			// 거꾸로 닫기
			try {
				if(result!=null) result.close();
				if(stat!= null) stat.close();
				if(drive!=null) drive.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}		
	}
}	

}
